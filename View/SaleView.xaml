<Window x:Class="Project.View.SaleView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Project.View"
        xmlns:prop="clr-namespace:Project.Properties"
        Title="{x:Static prop:Resources.Title_SaleView}"
        WindowState="Maximized" ShowInTaskbar="False" WindowStartupLocation="CenterScreen">
    <Grid Background="{DynamicResource BackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="15*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{x:Static prop:Resources.tb_DH}" Grid.Column="0"/>
            <TextBox x:Name="txtSalesID" Grid.Column="1">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding SaleIDSearchCommand}"
                                           CommandParameter="{Binding Text, ElementName=txtSalesID}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Text="{x:Static prop:Resources.tb_Date}" Grid.Column="2"/>
            <TextBox x:Name="txtFromDate" Grid.Column="3"
                 Text="{Binding DateFrom,StringFormat={}{0:yyyy/MM/dd}}" Foreground="Red" />
            <TextBlock Text="-" Grid.Column="4"/>
            <TextBox x:Name="txtToDate" Grid.Column="5"
                 Text="{Binding DateTo,StringFormat={}{0:yyyy/MM/dd}}" Foreground="Red" />
            <Button Content="{x:Static prop:Resources.btn_DateSearch}" Command="{Binding DateSearchCommand}" Grid.Column="6"/>

            <TextBlock Text="{x:Static prop:Resources.tb_CustomerName}" Grid.Column="7"/>
            <ComboBox x:Name="cboCustomerName" Grid.Column="8"
                  ItemsSource="{Binding CustomerList}" DisplayMemberPath="CustomerName" SelectedValuePath="CustomerID"
                  IsEditable="True" StaysOpenOnEdit="True" IsTextSearchEnabled="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding CustomerSelectionChangedCommand}"
                                                       CommandParameter="{Binding SelectedItem, ElementName=cboCustomerName}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <TextBlock Text="{x:Static prop:Resources.tb_PY}" Grid.Column="9"/>
            <TextBox x:Name="txtPY" Grid.Column="10">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding PYSearchCommand}"
                                           CommandParameter="{Binding Text, ElementName=txtPY}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </Grid>
        <DataGrid x:Name="dgSale" Grid.Row="1" ItemsSource="{Binding DisplaySaleCollection}" HeadersVisibility="All" IsReadOnly="True" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="{x:Static prop:Resources.column_Date}" Binding="{Binding SaleDate, StringFormat={}{0:yyyy/MM/dd}}" Width="90"/>
                <DataGridTextColumn Header="{x:Static prop:Resources.column_DH}" Binding="{Binding SaleID}" Width="150"/>
                <DataGridTextColumn Header="{x:Static prop:Resources.column_CustomerName}" Binding="{Binding Customer.CustomerName}" Width="200"/>
                <DataGridTextColumn Header="{x:Static prop:Resources.column_AttendantName}" Binding="{Binding Attendant.AttendantName}" Width="80"/>
                <DataGridTextColumn Header="{x:Static prop:Resources.column_ManufacturerName}" Binding="{Binding Manufacturer.ManufacturerName}" Width="80"/>
                <DataGridTextColumn Header="{x:Static prop:Resources.column_MachineID}" Binding="{Binding MachineID}" Width="200"/>
                <DataGridTextColumn Header="{x:Static prop:Resources.column_EngineID}" Binding="{Binding EngineID}" Width="200"/>
                <DataGridTextColumn Header="{x:Static prop:Resources.column_Note}" Binding="{Binding Note}"/>
                <DataGridCheckBoxColumn Header="{x:Static prop:Resources.column_Approved}" Binding="{Binding Approved}"/>
            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding OpenNewSaleViewCommand}"
                                           CommandParameter="{Binding SelectedItem, ElementName=dgSale}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SaleItemSelectionChangedCommand}"
                                           CommandParameter="{Binding SelectedItem, ElementName=dgSale}"/>
                </i:EventTrigger>               
            </i:Interaction.Triggers>
        </DataGrid>
        <DockPanel Grid.Row="2">
            <Grid DockPanel.Dock="Bottom">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{x:Static prop:Resources.tb_Sum}" Grid.Column="0"/>
                <TextBlock Text="{Binding SumPrice,StringFormat={}{0:N2}}" Grid.Column="1"/>

                <TextBlock Text="{x:Static prop:Resources.tb_SumServicePrice}" Grid.Column="2"/>
                <TextBlock Text="{Binding SumServicePrice, StringFormat={}{0:N2}}" Grid.Column="3"  Foreground="Red"/>

                <TextBlock Text="{x:Static prop:Resources.tb_SumSalePrice}" Grid.Column="4"/>
                <TextBlock Text="{Binding SumSalePrice,StringFormat={}{0:N2}}" Grid.Column="5"/>

                <TextBlock Text="{x:Static prop:Resources.tb_SumCostPrice}" Grid.Column="6"/>
                <TextBlock Text="{Binding SumCostPrice,StringFormat={}{0:N2}}" Grid.Column="7"/>

                <TextBlock Text="{x:Static prop:Resources.tb_ProductProfit}" Grid.Column="8"/>
                <TextBlock Text="{Binding ProductProfit,StringFormat={}{0:N2}}" Grid.Column="9" Foreground="Red"/>

                <TextBlock Text="{x:Static prop:Resources.tb_SumProfit}" Grid.Column="10"/>
                <TextBlock Text="{Binding SumProfit,StringFormat={}{0:N2}}" Grid.Column="11" Foreground="Red"/>
            </Grid>
            <DataGrid x:Name="dgSaleItem"  ItemsSource="{Binding SaleItemCollection}" GridLinesVisibility="Horizontal"
                      CanUserAddRows="False" CanUserSortColumns="False" AutoGenerateColumns="False" IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_ID}" Binding="{Binding ID}" Width="50"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_PDM}" Binding="{Binding Product.PDM}" Width="190"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_ProductName}" Binding="{Binding Product.ProductName}" Width="145"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_ProductCategory}" Binding="{Binding Product.Category}"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_Unit}" Binding="{Binding Product.Unit}" Width="50"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_Number}" Binding="{Binding Number}" Width="60"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_UnitPrice}" Binding="{Binding UnitPrice, StringFormat={}{0:N2}}" Width="80"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_Price}" Binding="{Binding SumSalePrice,StringFormat={}{0:N2}}" Width="80"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_CostPrice}" Binding="{Binding CostPrice,StringFormat={}{0:N2}}" Width="80"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_SumCostPrice}" Binding="{Binding SumCostPrice,StringFormat={}{0:N2}}" Width="80"/>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
        <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center" >
            <Button x:Name="btn_Refresh" Click="btn_Refresh_Click" Content="{x:Static prop:Resources.btn_Refresh}" Margin="0,0,20,0"/>
            <Button x:Name="btn_Print" Content="{x:Static prop:Resources.btn_Print}" Click="btn_Print_Click" Margin="0,0,20,0"/>
            <Button x:Name="btn_Close" Content="{x:Static prop:Resources.btn_Close}" Click="btn_Close_Click" />
        </StackPanel>
    </Grid>
</Window>
