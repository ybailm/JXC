<Window x:Class="Project.View.NewSaleView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Project.View"
        xmlns:prop="clr-namespace:Project.Properties"
        Title="{x:Static prop:Resources.Title_NewSaleView}"
        WindowState="Maximized" ShowInTaskbar="False" WindowStartupLocation="CenterScreen">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding RefreshCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Background="{StaticResource BackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="18*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" IsEnabled="{Binding IsEditable}">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="5*" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="5*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{x:Static prop:Resources.tb_XSDH}" Grid.Column="0"/>
                <TextBox Text="{Binding Sale.SaleID}" Grid.Column="1"/>
                <TextBlock Text="{x:Static prop:Resources.tb_Date}" Grid.Column="2"/>
                <DatePicker Text="{Binding Sale.SaleDate,Mode=TwoWay, StringFormat={}{0:yyyy/MM/dd}}" Grid.Column="3"/>
                <TextBlock Text="{x:Static prop:Resources.tb_CustomerName}" Grid.Column="4"/>
                <DockPanel Grid.Column="5" >
                    <ComboBox x:Name="cboCustomer" DockPanel.Dock="Right" Width="18" ItemsSource="{Binding DisplayCustomerList}" SelectedValuePath="CustomerID" IsEditable="True" GotFocus="cboCustomer_GotFocus">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="DropDownOpened">
                                <i:InvokeCommandAction Command="{Binding CustomerDropDownOpenedCommand}" CommandParameter="{Binding Text, ElementName=tbCustomer}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding CustomerSelectionChangedCommand}"
                                                       CommandParameter="{Binding SelectedItem, ElementName=cboCustomer}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <TextBox x:Name="tbCustomer" Text="{Binding Sale.Customer.CustomerName, Mode=OneWay}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:InvokeCommandAction Command="{Binding CustomerDropDownOpenedCommand}" CommandParameter="{Binding Text, ElementName=tbCustomer}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </DockPanel>
                <Button Content="{x:Static prop:Resources.btn_CustomerManagement}" Grid.Column="6" Click="btn_AddNewCustomer_Click"/>
                <TextBlock Text="{Binding TipText}" Foreground="Red" Grid.Column="7"/>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{x:Static prop:Resources.tb_AttendantName}" Grid.Column="0"/>
                <DockPanel Grid.Column="1">
                    <ComboBox x:Name="cboAttendantName" DockPanel.Dock="Right" Width="18" ItemsSource ="{Binding AttendantCollection}" DisplayMemberPath="Attendant.AttendantName" SelectedValuePath="Attendant.AttendantID"
                  IsEditable="False" StaysOpenOnEdit="True" IsTextSearchEnabled="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding AttendantSelectionChangedCommand}"
                                                       CommandParameter="{Binding SelectedItem, ElementName=cboAttendantName}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <TextBox Text="{Binding Sale.Attendant.AttendantName}" IsReadOnly="True"/>

                </DockPanel>

                <TextBlock Text="{x:Static prop:Resources.tb_MachineID}" Grid.Column="2"/>
                <TextBox Text="{Binding Sale.MachineID}" Grid.Column="3"/>
                <TextBlock Text="{x:Static prop:Resources.tb_EngineID}" Grid.Column="4"/>
                <TextBox Text="{Binding Sale.EngineID}" Grid.Column="5"/>
                <TextBlock Text="{x:Static prop:Resources.tb_ManufacturerName}" Grid.Column="6"/>
                <DockPanel Grid.Column="7">
                    <ComboBox x:Name="cboManufacturerName" DockPanel.Dock="Right" Width="18" ItemsSource="{Binding ManufacturerList}" DisplayMemberPath="ManufacturerName" SelectedValuePath="ManufacturerID"
                          IsEditable="False" StaysOpenOnEdit="True" IsTextSearchEnabled="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ManufacturerSelectionChangedCommand}"
                                                       CommandParameter="{Binding SelectedItem, ElementName=cboManufacturerName}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <TextBox Text="{Binding Sale.Manufacturer.ManufacturerName}" IsReadOnly="True"/>
                </DockPanel>
            </Grid>
            <DockPanel Grid.Row="2">
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
                    <TextBlock Text="{x:Static prop:Resources.tb_SumSalePrice}" />
                    <Rectangle Width="20"/>
                    <TextBlock Text="{Binding SumSalePrice}" TextAlignment="Left"/>
                    <Rectangle Width="200"/>
                    <TextBlock Text="{x:Static prop:Resources.tb_SumCaptalPrice}"/>
                    <Rectangle Width="20"/>
                    <TextBlock Text="{Binding SumCaptalSalePrice}" TextAlignment="Left"/>
                </StackPanel>               
                <DataGrid x:Name="dgSaleItem"  ItemsSource="{Binding SaleItemCollection}" GridLinesVisibility="Horizontal"
                          CanUserAddRows="False" CanUserSortColumns="False" AutoGenerateColumns="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{x:Static prop:Resources.column_ID}" Binding="{Binding ID}" Width="50" IsReadOnly="True"/>
                        <DataGridTextColumn Header="{x:Static prop:Resources.column_PDM}" Binding="{Binding Product.PDM}" Width="190" IsReadOnly="True"/>
                        <DataGridTextColumn Header="{x:Static prop:Resources.column_ProductName}" Binding="{Binding Product.ProductName}" Width="145" IsReadOnly="True"/>
                        <DataGridTextColumn Header="{x:Static prop:Resources.column_ProductCategory}" Binding="{Binding Product.Category}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="{x:Static prop:Resources.column_Unit}" Binding="{Binding Product.Unit}" Width="50" IsReadOnly="True"/>
                        <DataGridTextColumn Header="{x:Static prop:Resources.column_Number}" Binding="{Binding Number}" Width="60"/>
                        <DataGridTextColumn Header="{x:Static prop:Resources.column_UnitPrice}" Binding="{Binding UnitPrice, StringFormat={}{0:N2}}" Width="80"/>
                        <DataGridTextColumn Header="{x:Static prop:Resources.column_Price}" Binding="{Binding SumSalePrice,StringFormat={}{0:N2}}" Width="80" IsReadOnly="True"/>
                    </DataGrid.Columns>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding DeleteSaleItemCommand}"
                                           CommandParameter="{Binding SelectedItem, ElementName=dgSaleItem}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="CurrentCellChanged">
                            <i:InvokeCommandAction Command="{Binding EditSaleItemCommand}"
                                               CommandParameter="{Binding SelectedItem, ElementName=dgSaleItem}"/>
                        </i:EventTrigger>

                    </i:Interaction.Triggers>
                </DataGrid>
            </DockPanel>
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{x:Static prop:Resources.tb_PDM}" Grid.Column="0"/>
                <TextBox x:Name="txtPDM" Grid.Column="1">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding PDMSearchCommand}"
                                           CommandParameter="{Binding Text, ElementName=txtPDM}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <TextBlock Text="{x:Static prop:Resources.tb_PY}" Grid.Column="2" />
                <TextBox x:Name="txtPY" Grid.Column="3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding PYSearchCommand}"
                                           CommandParameter="{Binding Text, ElementName=txtPY}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>

                <TextBlock Text="{x:Static prop:Resources.tb_ProductName}" Grid.Column="4" />
                <TextBox x:Name="txtProductName" Grid.Column="5">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding ProductNameSearchCommand}"
                                           CommandParameter="{Binding Text, ElementName=txtProductName}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>

                <TextBlock Text="{x:Static prop:Resources.tb_ProductCategory}" Grid.Column="6"/>
                <ComboBox x:Name="cboCategory" ItemsSource="{Binding CategoryList}" Grid.Column="7">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding CategorySelectionChangedCommand}" CommandParameter="{Binding SelectedItem,ElementName=cboCategory}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>

                <TextBlock Text="{x:Static prop:Resources.tb_RKDH}" Grid.Column="8"/>
                <TextBox x:Name="tbPurchaseID" Text="QJMD-JH-0000000" Grid.Column="9"/>

                <Button Content="{x:Static prop:Resources.btn_Load}" Grid.Column="10" Command="{Binding InputSaleItemListCommand}" CommandParameter="{Binding Text, ElementName=tbPurchaseID}"/>
            </Grid>

            <DataGrid x:Name="dgProduct" ItemsSource="{Binding DisplayProductCollection}" AutoGenerateColumns="False" Grid.Row="4" IsReadOnly="True">                
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding AddSaleItemCommand}"
                                           CommandParameter="{Binding SelectedItem, ElementName=dgProduct}"/>
                    </i:EventTrigger>    
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_ID}" Binding="{Binding ProductID}"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_PDM}" Binding="{Binding PDM}"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_ProductName}" Binding="{Binding ProductName}"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_PY}" Binding="{Binding PY}"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_ProductCategory}" Binding="{Binding Category}"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_Unit}" Binding="{Binding Unit}"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_Number}" Binding="{Binding Number}"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_UnitPrice}" Binding="{Binding UnitPrice, StringFormat={}{0:N2}}" Width="80"/>
                    <DataGridTextColumn Header="{x:Static prop:Resources.column_CostPrice}" Binding="{Binding CostPrice, StringFormat={}{0:N2}}" Width="80"/>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Grid.Row="5" Orientation="Horizontal">
                <TextBlock Text="{x:Static prop:Resources.tb_Service}"/>
                <Rectangle Width="200" />

                <TextBlock Text="{x:Static prop:Resources.tb_Attendant}"/>
                <TextBlock Text="{Binding Sale.Note}"/>
            </StackPanel>
            <Grid Grid.Row="6">
                <Grid.RowDefinitions>
                    <RowDefinition Height="5*"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <DockPanel Grid.Row="0" Grid.RowSpan="2" Grid.Column="0">
                    <Grid DockPanel.Dock="Bottom">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Static prop:Resources.tb_SumServicePrice}" Grid.Column="0"/>
                        <TextBlock Text="{Binding SumServicePrice}" Grid.Column="1"/>
                        <TextBlock Text="{x:Static prop:Resources.tb_SumPrice}" Grid.Column="2"/>
                        <TextBlock Text="{Binding SumPrice}" Grid.Column="3"/>
                        <TextBlock Text="{x:Static prop:Resources.tb_SumCaptalPrice}" Grid.Column="4"/>
                        <TextBox Text="{Binding SumCaptalPrice}" Grid.Column="5"/>
                    </Grid>
                    <DataGrid x:Name="dgServiceItem"  ItemsSource="{Binding ServiceItemCollection}" GridLinesVisibility="Horizontal"
                          CanUserAddRows="False" CanUserSortColumns="False" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static prop:Resources.column_ID}" Binding="{Binding ID}" Width="50" IsReadOnly="True"/>
                            <DataGridTextColumn Header="{x:Static prop:Resources.column_Service}" Binding="{Binding Service.ServiceName}" Width="200" IsReadOnly="True"/>
                            <DataGridTextColumn Header="{x:Static prop:Resources.column_Number}" Binding="{Binding Number}" Width="45"/>
                            <DataGridTextColumn Header="{x:Static prop:Resources.column_UnitPrice}" Binding="{Binding UnitPrice, StringFormat={}{0:N2}}"/>
                            <DataGridTextColumn Header="{x:Static prop:Resources.column_Price}" Binding="{Binding SumServicePrice,StringFormat={}{0:N2}}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding DeleteServiceItemCommand}"
                                           CommandParameter="{Binding SelectedItem, ElementName=dgServiceItem}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="CurrentCellChanged">
                                <i:InvokeCommandAction Command="{Binding EditServiceItemCommand}"
                                               CommandParameter="{Binding SelectedItem, ElementName=dgServiceItem}"/>
                            </i:EventTrigger>

                        </i:Interaction.Triggers>
                    </DataGrid>
                </DockPanel>
                <DockPanel Grid.Row="1" Grid.Column="1" >
                    <!--<TextBlock Text="{x:Static prop:Resources.tb_AttendantName}" DockPanel.Dock="Top"/>-->
                    <ListBox ItemsSource="{Binding AttendantCollection}" DisplayMemberPath="" SelectedValuePath="" >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="cb" IsChecked="{Binding IsChecked, Mode=TwoWay}" Content="{Binding Attendant.AttendantName}" 
                                      Command="{Binding DataContext.CheckCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" 
                                      CommandParameter="{Binding Attendant.AttendantName}">

                                </CheckBox>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel IsItemsHost="True"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                </DockPanel>
                <DockPanel Grid.Row="0" Grid.Column="1">
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <TextBlock Text="{x:Static prop:Resources.tb_Service}" />
                        <TextBox x:Name="txtServiceSearch" MinWidth="120" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding ServiceSearchCommand}"
                                                       CommandParameter="{Binding Text, ElementName=txtServiceSearch}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <Button x:Name="btnService" Content="{x:Static prop:Resources.btn_AddNewService}" Click="btnService_Click" />
                    </StackPanel>

                    <ListBox x:Name="lbService" ItemsSource="{Binding DisplayServiceList}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding ServiceName}"/>
                                    <Border Width="20"/>
                                    <TextBlock Text="{Binding UnitPrice,StringFormat={}{0:c}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding AddServiceItemCommand}" CommandParameter="{Binding SelectedItem, ElementName=lbService}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>
                </DockPanel>
            </Grid>
            
        </Grid>
        <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center">
            <Button Content="{x:Static prop:Resources.btn_Save}" Command="{Binding SaveSaleItemCommand}"  IsEnabled="{Binding IsEditable}" Margin="0,0,20,0"/>
            <Button Content="{x:Static prop:Resources.btn_SaveAndNew}" Command="{Binding SaveSaleItemAndNewCommand}"  IsEnabled="{Binding IsEditable}" Margin="0,0,20,0"/>
            <Button Content="{x:Static prop:Resources.btn_Print}" Command="{Binding OpenPrintViewCommand}" Margin="0,0,20,0"/>
            <Button Content="{x:Static prop:Resources.btn_Approve}" Command="{Binding ApproveCommand}" IsEnabled="{Binding IsEditable}" Margin="0,0,20,0"/>
            <Button Content="{x:Static prop:Resources.btn_Close}" Click="btn_Close_Click"/>
        </StackPanel>
    </Grid>
</Window>
